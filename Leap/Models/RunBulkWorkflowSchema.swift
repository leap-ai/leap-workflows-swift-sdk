//
// RunBulkWorkflowSchema.swift
//
// Generated by Konfig
// https://konfigthis.com
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct RunBulkWorkflowSchema: Codable, JSONEncodable, Hashable {

    /** The ID of the workflow to be run in bulk. */
    public var workflowId: String
    /** A CSV file containing the input data for the bulk run. Each row should contain the input data for a single run. */
    public var inputCsvUrl: String
    /** The URL to which the bulk run results should be sent to on completion. */
    public var webhookUrl: String?

    public init(workflowId: String, inputCsvUrl: String, webhookUrl: String? = nil) {
        self.workflowId = workflowId
        self.inputCsvUrl = inputCsvUrl
        self.webhookUrl = webhookUrl
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case workflowId = "workflow_id"
        case inputCsvUrl = "input_csv_url"
        case webhookUrl = "webhook_url"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(workflowId, forKey: .workflowId)
        try container.encode(inputCsvUrl, forKey: .inputCsvUrl)
        try container.encodeIfPresent(webhookUrl, forKey: .webhookUrl)
    }
}


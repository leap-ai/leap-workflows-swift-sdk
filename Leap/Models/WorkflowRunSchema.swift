//
// WorkflowRunSchema.swift
//
// Generated by Konfig
// https://konfigthis.com
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct WorkflowRunSchema: Codable, JSONEncodable, Hashable {

    public enum Status: String, Codable, CaseIterable {
        case completed = "completed"
        case running = "running"
        case failed = "failed"
        case queued = "queued"
        case cancelled = "cancelled"
    }
    public var id: String
    public var versionId: String
    public var status: Status
    public var createdAt: String
    public var startedAt: String?
    public var endedAt: String?
    public var workflowId: String
    public var error: String?
    public var input: AnyCodable?
    public var output: AnyCodable?

    public init(id: String, versionId: String, status: Status, createdAt: String, startedAt: String?, endedAt: String?, workflowId: String, error: String?, input: AnyCodable?, output: AnyCodable?) {
        self.id = id
        self.versionId = versionId
        self.status = status
        self.createdAt = createdAt
        self.startedAt = startedAt
        self.endedAt = endedAt
        self.workflowId = workflowId
        self.error = error
        self.input = input
        self.output = output
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case versionId = "version_id"
        case status
        case createdAt = "created_at"
        case startedAt = "started_at"
        case endedAt = "ended_at"
        case workflowId = "workflow_id"
        case error
        case input
        case output
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(versionId, forKey: .versionId)
        try container.encode(status, forKey: .status)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(startedAt, forKey: .startedAt)
        try container.encode(endedAt, forKey: .endedAt)
        try container.encode(workflowId, forKey: .workflowId)
        try container.encode(error, forKey: .error)
        try container.encode(input, forKey: .input)
        try container.encode(output, forKey: .output)
    }
}

